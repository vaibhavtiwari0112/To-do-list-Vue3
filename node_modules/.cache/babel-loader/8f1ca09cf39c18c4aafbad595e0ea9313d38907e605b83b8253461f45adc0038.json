{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, inject } from \"vue\";\nexport default {\n  name: \"TodoList\",\n  setup() {\n    const newTask = ref(\"\");\n    const tasks = ref([]);\n    const completedTasks = ref([]);\n    const ongoingTasks = ref([]);\n    const $axios = inject(\"$axios\");\n    const addTask = async () => {\n      if (newTask.value.trim() !== \"\") {\n        const response = await $axios.post(\"http://localhost:3000/tasks\", {\n          text: newTask.value,\n          createdAt: new Date().toLocaleString(),\n          completed: false,\n          completedAt: null\n        });\n        tasks.value.push(response.data);\n        ongoingTasks.value.push(response.data); // Add to ongoingTasks initially\n        newTask.value = \"\";\n      }\n    };\n    const deleteTask = async taskId => {\n      try {\n        // Delete task from the server\n        await $axios.delete(`http://localhost:3000/tasks/${taskId}`);\n\n        // Update the local tasks array\n        tasks.value = tasks.value.filter(task => task.id !== taskId);\n\n        // Update the ongoingTasks and completedTasks arrays\n        completedTasks.value = completedTasks.value.filter(task => task.id !== taskId);\n        ongoingTasks.value = ongoingTasks.value.filter(task => task.id !== taskId);\n      } catch (error) {\n        console.error(\"Error deleting task:\", error);\n      }\n    };\n    const completeTask = async taskId => {\n      const taskIndex = tasks.value.findIndex(task => task.id === taskId);\n      if (taskIndex !== -1) {\n        const response = await $axios.patch(`http://localhost:3000/tasks/${taskId}`, {\n          completed: true,\n          completedAt: new Date().toLocaleString()\n        });\n        completedTasks.value.push(response.data);\n        ongoingTasks.value.splice(taskIndex, 1); // Remove from ongoingTasks\n        tasks.value.splice(taskIndex, 1);\n      }\n    };\n\n    // Fetch tasks on component mount\n    onMounted(async () => {\n      const response = await $axios.get(\"http://localhost:3000/tasks\");\n      tasks.value = response.data;\n      completedTasks.value = response.data.filter(task => task.completed);\n      ongoingTasks.value = response.data.filter(task => !task.completed);\n    });\n    return {\n      newTask,\n      tasks,\n      completedTasks,\n      ongoingTasks,\n      addTask,\n      completeTask,\n      deleteTask\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","inject","name","setup","newTask","tasks","completedTasks","ongoingTasks","$axios","addTask","value","trim","response","post","text","createdAt","Date","toLocaleString","completed","completedAt","push","data","deleteTask","taskId","delete","filter","task","id","error","console","completeTask","taskIndex","findIndex","patch","splice","get"],"sources":["D:\\to-do-list\\client\\vue-todo-app\\src\\components\\Todo.vue"],"sourcesContent":["<!-- src/components/Todo.vue -->\r\n\r\n<template>\r\n  <div>\r\n    <h2>To-Do List</h2>\r\n    <div>\r\n      <input\r\n        v-model=\"newTask\"\r\n        @keyup.enter=\"addTask\"\r\n        placeholder=\"Add a new task\"\r\n      />\r\n    </div>\r\n    <!--   <ul>\r\n      <li v-for=\"task in tasks\" :key=\"task.id\">\r\n        <span>{{ task.text }}</span>\r\n        <span>Created on: {{ task.createdAt }}</span>\r\n        \r\n        <button @click=\"deleteTask(task.id)\">Delete</button>\r\n      </li>\r\n    </ul> -->\r\n    <h3>Ongoing Tasks</h3>\r\n    <ul>\r\n      <li v-for=\"task in ongoingTasks\" :key=\"task.id\">\r\n        <span>{{ task.text }}</span>\r\n        <span>Created on: {{ task.createdAt }}</span>\r\n        <button @click=\"completeTask(task.id)\">Complete</button>\r\n        <button @click=\"deleteTask(task.id)\">Delete</button>\r\n      </li>\r\n    </ul>\r\n    <h3>Completed Tasks</h3>\r\n    <ul>\r\n      <li v-for=\"task in completedTasks\" :key=\"task.id\">\r\n        <span>{{ task.text }}</span>\r\n        <span>Completed on: {{ task.completedAt }}</span>\r\n        <button @click=\"deleteTask(task.id)\">Delete</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, inject } from \"vue\";\r\n\r\nexport default {\r\n  name: \"TodoList\",\r\n  setup() {\r\n    const newTask = ref(\"\");\r\n    const tasks = ref([]);\r\n    const completedTasks = ref([]);\r\n    const ongoingTasks = ref([]);\r\n    const $axios = inject(\"$axios\");\r\n\r\n    const addTask = async () => {\r\n      if (newTask.value.trim() !== \"\") {\r\n        const response = await $axios.post(\"http://localhost:3000/tasks\", {\r\n          text: newTask.value,\r\n          createdAt: new Date().toLocaleString(),\r\n          completed: false,\r\n          completedAt: null,\r\n        });\r\n        tasks.value.push(response.data);\r\n        ongoingTasks.value.push(response.data); // Add to ongoingTasks initially\r\n        newTask.value = \"\";\r\n      }\r\n    };\r\n    const deleteTask = async (taskId) => {\r\n      try {\r\n        // Delete task from the server\r\n        await $axios.delete(`http://localhost:3000/tasks/${taskId}`);\r\n\r\n        // Update the local tasks array\r\n        tasks.value = tasks.value.filter((task) => task.id !== taskId);\r\n\r\n        // Update the ongoingTasks and completedTasks arrays\r\n        completedTasks.value = completedTasks.value.filter(\r\n          (task) => task.id !== taskId\r\n        );\r\n        ongoingTasks.value = ongoingTasks.value.filter(\r\n          (task) => task.id !== taskId\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Error deleting task:\", error);\r\n      }\r\n    };\r\n\r\n    const completeTask = async (taskId) => {\r\n      const taskIndex = tasks.value.findIndex((task) => task.id === taskId);\r\n      if (taskIndex !== -1) {\r\n        const response = await $axios.patch(\r\n          `http://localhost:3000/tasks/${taskId}`,\r\n          {\r\n            completed: true,\r\n            completedAt: new Date().toLocaleString(),\r\n          }\r\n        );\r\n        completedTasks.value.push(response.data);\r\n        ongoingTasks.value.splice(taskIndex, 1); // Remove from ongoingTasks\r\n        tasks.value.splice(taskIndex, 1);\r\n      }\r\n    };\r\n\r\n    // Fetch tasks on component mount\r\n    onMounted(async () => {\r\n      const response = await $axios.get(\"http://localhost:3000/tasks\");\r\n      tasks.value = response.data;\r\n      completedTasks.value = response.data.filter((task) => task.completed);\r\n      ongoingTasks.value = response.data.filter((task) => !task.completed);\r\n    });\r\n\r\n    return {\r\n      newTask,\r\n      tasks,\r\n      completedTasks,\r\n      ongoingTasks,\r\n      addTask,\r\n      completeTask,\r\n      deleteTask,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}