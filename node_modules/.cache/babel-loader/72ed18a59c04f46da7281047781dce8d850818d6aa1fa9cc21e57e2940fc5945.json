{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ee48fd14\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"todo-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"todo-heading\"\n}, \"To-Do List\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"todo-input\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"todo-table\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Task\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Created Date\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Actions\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  key: 0\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_tab = _resolveComponent(\"v-tab\");\n  const _component_v_tabs = _resolveComponent(\"v-tabs\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_tab_item = _resolveComponent(\"v-tab-item\");\n  const _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newTask = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $setup.addTask && $setup.addTask(...args), [\"enter\"])),\n    placeholder: \"Add a new task\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.newTask]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.addTask && $setup.addTask(...args))\n  }, \"Add\")]), _createVNode(_component_v_app, null, {\n    default: _withCtx(() => [_createVNode(_component_v_tabs, {\n      modelValue: $setup.activeTab,\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.activeTab = $event),\n      class: \"todo-tabs\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tabs, (tab, index) => {\n        return _openBlock(), _createBlock(_component_v_tab, {\n          key: index,\n          onClick: $event => $setup.changeTab(tab)\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(tab), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tabs, (tab, index) => {\n      return _openBlock(), _createBlock(_component_v_tab_item, {\n        key: index,\n        value: tab\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card, {\n          color: \"basil\",\n          flat: \"\",\n          class: \"todo-list-card\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [$setup.activeTab === tab ? (_openBlock(), _createElementBlock(\"table\", _hoisted_4, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_hoisted_5, _hoisted_6, $setup.activeTab === 'completed' ? (_openBlock(), _createElementBlock(\"th\", _hoisted_7, \"Completed Date\")) : _createCommentVNode(\"v-if\", true), _hoisted_8])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.displayedTasks, task => {\n              return _openBlock(), _createElementBlock(\"tr\", {\n                key: task.id\n              }, [_createElementVNode(\"td\", null, _toDisplayString(task.text), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(task.createdAt), 1 /* TEXT */), $setup.activeTab === 'completed' ? (_openBlock(), _createElementBlock(\"td\", _hoisted_9, _toDisplayString(task.completedAt), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"td\", null, [$setup.activeTab !== 'completed' ? (_openBlock(), _createElementBlock(\"button\", {\n                key: 0,\n                onClick: $event => $setup.completeTask(task.id)\n              }, \" Complete \", 8 /* PROPS */, _hoisted_10)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n                onClick: $event => $setup.deleteTask(task.id)\n              }, \"Delete\", 8 /* PROPS */, _hoisted_11)])]);\n            }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_cache","$event","$setup","newTask","onKeyup","_withKeys","args","addTask","placeholder","onClick","_createVNode","_component_v_app","default","_withCtx","_component_v_tabs","modelValue","activeTab","_Fragment","_renderList","tabs","tab","index","_createBlock","_component_v_tab","changeTab","_createTextVNode","_toDisplayString","_","_component_v_tab_item","value","_component_v_card","color","flat","_component_v_card_text","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_createCommentVNode","_hoisted_8","displayedTasks","task","id","text","createdAt","_hoisted_9","completedAt","completeTask","_hoisted_10","deleteTask","_hoisted_11"],"sources":["D:\\to-do-list\\client\\vue-todo-app\\src\\components\\Todo.vue"],"sourcesContent":["<template>\r\n  <div class=\"todo-container\">\r\n    <h2 class=\"todo-heading\">To-Do List</h2>\r\n    <div class=\"todo-input\">\r\n      <input\r\n        v-model=\"newTask\"\r\n        @keyup.enter=\"addTask\"\r\n        placeholder=\"Add a new task\"\r\n      />\r\n      <button @click=\"addTask\">Add</button>\r\n    </div>\r\n    <v-app>\r\n      <v-tabs v-model=\"activeTab\" class=\"todo-tabs\">\r\n        <v-tab\r\n          v-for=\"(tab, index) in tabs\"\r\n          :key=\"index\"\r\n          @click=\"changeTab(tab)\"\r\n        >\r\n          {{ tab }}\r\n        </v-tab>\r\n      </v-tabs>\r\n      <v-tab-item v-for=\"(tab, index) in tabs\" :key=\"index\" :value=\"tab\">\r\n        <v-card color=\"basil\" flat class=\"todo-list-card\">\r\n          <v-card-text>\r\n            <table v-if=\"activeTab === tab\" class=\"todo-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Task</th>\r\n                  <th>Created Date</th>\r\n                  <th v-if=\"activeTab === 'completed'\">Completed Date</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"task in displayedTasks\" :key=\"task.id\">\r\n                  <td>{{ task.text }}</td>\r\n                  <td>{{ task.createdAt }}</td>\r\n                  <td v-if=\"activeTab === 'completed'\">\r\n                    {{ task.completedAt }}\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      v-if=\"activeTab !== 'completed'\"\r\n                      @click=\"completeTask(task.id)\"\r\n                    >\r\n                      Complete\r\n                    </button>\r\n                    <button @click=\"deleteTask(task.id)\">Delete</button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-tab-item>\r\n    </v-app>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, inject, computed } from \"vue\";\r\n\r\nexport default {\r\n  name: \"TodoList\",\r\n  setup() {\r\n    const newTask = ref(\"\");\r\n    const tasks = ref([]);\r\n    const completedTasks = ref([]);\r\n    const ongoingTasks = ref([]);\r\n    const $axios = inject(\"$axios\");\r\n    const activeTab = ref(\"ongoing\");\r\n\r\n    const addTask = async () => {\r\n      if (newTask.value.trim() !== \"\") {\r\n        const response = await $axios.post(\"http://localhost:3000/tasks\", {\r\n          text: newTask.value,\r\n          createdAt: new Date().toLocaleString(),\r\n          completed: false,\r\n          completedAt: null,\r\n        });\r\n        tasks.value.push(response.data);\r\n        ongoingTasks.value.push(response.data);\r\n        newTask.value = \"\";\r\n      }\r\n    };\r\n\r\n    const deleteTask = async (taskId) => {\r\n      try {\r\n        await $axios.delete(`http://localhost:3000/tasks/${taskId}`);\r\n\r\n        tasks.value = tasks.value.filter((task) => task.id !== taskId);\r\n        completedTasks.value = completedTasks.value.filter(\r\n          (task) => task.id !== taskId\r\n        );\r\n        ongoingTasks.value = ongoingTasks.value.filter(\r\n          (task) => task.id !== taskId\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Error deleting task:\", error);\r\n      }\r\n    };\r\n\r\n    const completeTask = async (taskId) => {\r\n      const taskIndex = tasks.value.findIndex((task) => task.id === taskId);\r\n      if (taskIndex !== -1) {\r\n        const response = await $axios.patch(\r\n          `http://localhost:3000/tasks/${taskId}`,\r\n          {\r\n            completed: true,\r\n            completedAt: new Date().toLocaleString(),\r\n          }\r\n        );\r\n\r\n        const updatedTask = {\r\n          ...tasks.value[taskIndex],\r\n          completed: true,\r\n          completedAt: response.data.completedAt,\r\n        };\r\n\r\n        // Remove from ongoingTasks and update the array\r\n        ongoingTasks.value = ongoingTasks.value.filter(\r\n          (task) => task.id !== taskId\r\n        );\r\n\r\n        // Reassign the tasks array to trigger reactivity\r\n        tasks.value = [\r\n          ...tasks.value.slice(0, taskIndex),\r\n          updatedTask,\r\n          ...tasks.value.slice(taskIndex + 1),\r\n        ];\r\n\r\n        // Move the task to completedTasks array\r\n        completedTasks.value.push(updatedTask);\r\n      }\r\n    };\r\n\r\n    onMounted(async () => {\r\n      const response = await $axios.get(\"http://localhost:3000/tasks\");\r\n      tasks.value = response.data;\r\n      completedTasks.value = response.data.filter((task) => task.completed);\r\n      ongoingTasks.value = response.data.filter((task) => !task.completed);\r\n    });\r\n\r\n    const displayedTasks = computed(() => {\r\n      return activeTab.value === \"completed\"\r\n        ? completedTasks.value\r\n        : ongoingTasks.value;\r\n    });\r\n\r\n    const tabs = [\"ongoing\", \"completed\"];\r\n\r\n    const changeTab = (tab) => {\r\n      activeTab.value = tab;\r\n    };\r\n\r\n    return {\r\n      newTask,\r\n      tasks,\r\n      completedTasks,\r\n      ongoingTasks,\r\n      addTask,\r\n      completeTask,\r\n      deleteTask,\r\n      activeTab,\r\n      displayedTasks,\r\n      tabs,\r\n      changeTab,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.todo-container {\r\n  text-align: center;\r\n  margin-top: 50px;\r\n}\r\n\r\n.todo-heading {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.todo-input {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.todo-input input {\r\n  padding: 10px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.todo-input button {\r\n  padding: 10px 20px;\r\n}\r\n\r\n.todo-tabs {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  gap: 10px; /* Add spacing between tabs */\r\n}\r\n\r\n.todo-tabs v-tab {\r\n  background-color: #4caf50; /* Green color for tabs */\r\n  color: #fff; /* White text for tabs */\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.todo-tabs v-tab:hover {\r\n  background-color: #45a049; /* Darker green color on hover */\r\n}\r\n\r\n.todo-tabs v-tab-item {\r\n  background-color: #f2f2f2; /* Light gray background for tab content */\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.todo-list-card {\r\n  width: 70%;\r\n  margin: 0 auto;\r\n}\r\n\r\n.todo-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n}\r\n\r\n.todo-table th,\r\n.todo-table td {\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n  text-align: left;\r\n}\r\n\r\n.todo-table th {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n.todo-table td button {\r\n  margin-right: 5px;\r\n}\r\n\r\n/* Add specific styles for the 'completed' tab */\r\n.todo-tabs v-tab-item[value=\"completed\"] {\r\n  background-color: #3498db; /* Blue background for completed tab content */\r\n  color: #fff; /* White text for completed tab content */\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}