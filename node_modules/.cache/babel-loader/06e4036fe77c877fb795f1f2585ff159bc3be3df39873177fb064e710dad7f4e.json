{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"To-Do List\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Ongoing Tasks\", -1 /* HOISTED */);\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Completed Tasks\", -1 /* HOISTED */);\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newTask = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $setup.addTask && $setup.addTask(...args), [\"enter\"])),\n    placeholder: \"Add a new task\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.newTask]])]), _createCommentVNode(\"   <ul>\\r\\n      <li v-for=\\\"task in tasks\\\" :key=\\\"task.id\\\">\\r\\n        <span>{{ task.text }}</span>\\r\\n        <span>Created on: {{ task.createdAt }}</span>\\r\\n        \\r\\n        <button @click=\\\"deleteTask(task.id)\\\">Delete</button>\\r\\n      </li>\\r\\n    </ul> \"), _hoisted_2, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.ongoingTasks, task => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: task.id\n    }, [_createElementVNode(\"span\", null, _toDisplayString(task.text), 1 /* TEXT */), _createElementVNode(\"span\", null, \"Created on: \" + _toDisplayString(task.createdAt), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $setup.completeTask(task.id)\n    }, \"Complete\", 8 /* PROPS */, _hoisted_3), _createElementVNode(\"button\", {\n      onClick: $event => $setup.deleteTask(task.id)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_5, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.completedTasks, task => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: task.id\n    }, [_createElementVNode(\"span\", null, _toDisplayString(task.text), 1 /* TEXT */), _createElementVNode(\"span\", null, \"Completed on: \" + _toDisplayString(task.completedAt), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $setup.deleteTask(task.id)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_6)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_cache","$event","$setup","newTask","onKeyup","_withKeys","args","addTask","placeholder","_createCommentVNode","_hoisted_2","_Fragment","_renderList","ongoingTasks","task","key","id","_toDisplayString","text","createdAt","onClick","completeTask","_hoisted_3","deleteTask","_hoisted_4","_hoisted_5","completedTasks","completedAt","_hoisted_6"],"sources":["D:\\to-do-list\\client\\vue-todo-app\\src\\components\\Todo.vue"],"sourcesContent":["<!-- src/components/Todo.vue -->\r\n\r\n<template>\r\n  <div>\r\n    <h2>To-Do List</h2>\r\n    <div>\r\n      <input\r\n        v-model=\"newTask\"\r\n        @keyup.enter=\"addTask\"\r\n        placeholder=\"Add a new task\"\r\n      />\r\n    </div>\r\n    <!--   <ul>\r\n      <li v-for=\"task in tasks\" :key=\"task.id\">\r\n        <span>{{ task.text }}</span>\r\n        <span>Created on: {{ task.createdAt }}</span>\r\n        \r\n        <button @click=\"deleteTask(task.id)\">Delete</button>\r\n      </li>\r\n    </ul> -->\r\n    <h3>Ongoing Tasks</h3>\r\n    <ul>\r\n      <li v-for=\"task in ongoingTasks\" :key=\"task.id\">\r\n        <span>{{ task.text }}</span>\r\n        <span>Created on: {{ task.createdAt }}</span>\r\n        <button @click=\"completeTask(task.id)\">Complete</button>\r\n        <button @click=\"deleteTask(task.id)\">Delete</button>\r\n      </li>\r\n    </ul>\r\n    <h3>Completed Tasks</h3>\r\n    <ul>\r\n      <li v-for=\"task in completedTasks\" :key=\"task.id\">\r\n        <span>{{ task.text }}</span>\r\n        <span>Completed on: {{ task.completedAt }}</span>\r\n        <button @click=\"deleteTask(task.id)\">Delete</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, inject } from \"vue\";\r\n\r\nexport default {\r\n  name: \"TodoList\",\r\n  setup() {\r\n    const newTask = ref(\"\");\r\n    const tasks = ref([]);\r\n    const completedTasks = ref([]);\r\n    const ongoingTasks = ref([]);\r\n    const $axios = inject(\"$axios\");\r\n\r\n    const addTask = async () => {\r\n      if (newTask.value.trim() !== \"\") {\r\n        const response = await $axios.post(\"http://localhost:3000/tasks\", {\r\n          text: newTask.value,\r\n          createdAt: new Date().toLocaleString(),\r\n          completed: false,\r\n          completedAt: null,\r\n        });\r\n        tasks.value.push(response.data);\r\n        ongoingTasks.value.push(response.data); // Add to ongoingTasks initially\r\n        newTask.value = \"\";\r\n      }\r\n    };\r\n    const deleteTask = async (taskId) => {\r\n      const taskIndex = tasks.value.findIndex((task) => task.id === taskId);\r\n      if (taskIndex !== -1) {\r\n        await $axios.delete(`http://localhost:3000/tasks/${taskId}`);\r\n        tasks.value.splice(taskIndex, 1);\r\n\r\n        // Check if the deleted task was completed or ongoing\r\n        const completedTaskIndex = completedTasks.value.findIndex(\r\n          (task) => task.id === taskId\r\n        );\r\n        const ongoingTaskIndex = ongoingTasks.value.findIndex(\r\n          (task) => task.id === taskId\r\n        );\r\n\r\n        if (completedTaskIndex !== -1) {\r\n          completedTasks.value.splice(completedTaskIndex, 1);\r\n        } else if (ongoingTaskIndex !== -1) {\r\n          ongoingTasks.value.splice(ongoingTaskIndex, 1);\r\n        }\r\n      }\r\n    };\r\n\r\n    const completeTask = async (taskId) => {\r\n      const taskIndex = tasks.value.findIndex((task) => task.id === taskId);\r\n      if (taskIndex !== -1) {\r\n        const response = await $axios.patch(\r\n          `http://localhost:3000/tasks/${taskId}`,\r\n          {\r\n            completed: true,\r\n            completedAt: new Date().toLocaleString(),\r\n          }\r\n        );\r\n        completedTasks.value.push(response.data);\r\n        ongoingTasks.value.splice(taskIndex, 1); // Remove from ongoingTasks\r\n        tasks.value.splice(taskIndex, 1);\r\n      }\r\n    };\r\n\r\n    // Fetch tasks on component mount\r\n    onMounted(async () => {\r\n      const response = await $axios.get(\"http://localhost:3000/tasks\");\r\n      tasks.value = response.data;\r\n      completedTasks.value = response.data.filter((task) => task.completed);\r\n      ongoingTasks.value = response.data.filter((task) => !task.completed);\r\n    });\r\n\r\n    return {\r\n      newTask,\r\n      tasks,\r\n      completedTasks,\r\n      ongoingTasks,\r\n      addTask,\r\n      completeTask,\r\n      deleteTask,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";gCAIIA,mBAAA,CAAmB,YAAf,YAAU;gCAgBdA,mBAAA,CAAsB,YAAlB,eAAa;mBApBrB;mBAAA;gCA6BIA,mBAAA,CAAwB,YAApB,iBAAe;mBA7BvB;;uBAGEC,mBAAA,CAkCM,cAjCJC,UAAmB,EACnBF,mBAAA,CAMM,c,gBALJA,mBAAA,CAIE;IAVR,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOiBC,MAAA,CAAAC,OAAO,GAAAF,MAAA;IACfG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MARdK,SAAA,KAAAC,IAAA,KAQsBJ,MAAA,CAAAK,OAAA,IAAAL,MAAA,CAAAK,OAAA,IAAAD,IAAA,CAAO;IACrBE,WAAW,EAAC;iEAFHN,MAAA,CAAAC,OAAO,E,KAKpBM,mBAAA,8QAOS,EACTC,UAAsB,EACtBb,mBAAA,CAOK,c,kBANHC,mBAAA,CAKKa,SAAA,QA3BXC,WAAA,CAsByBV,MAAA,CAAAW,YAAY,EAApBC,IAAI;yBAAfhB,mBAAA,CAKK;MAL6BiB,GAAG,EAAED,IAAI,CAACE;QAC1CnB,mBAAA,CAA4B,cAAAoB,gBAAA,CAAnBH,IAAI,CAACI,IAAI,kBAClBrB,mBAAA,CAA6C,cAAvC,cAAY,GAAAoB,gBAAA,CAAGH,IAAI,CAACK,SAAS,kBACnCtB,mBAAA,CAAwD;MAA/CuB,OAAK,EAAAnB,MAAA,IAAEC,MAAA,CAAAmB,YAAY,CAACP,IAAI,CAACE,EAAE;OAAG,UAAQ,iBAzBvDM,UAAA,GA0BQzB,mBAAA,CAAoD;MAA3CuB,OAAK,EAAAnB,MAAA,IAAEC,MAAA,CAAAqB,UAAU,CAACT,IAAI,CAACE,EAAE;OAAG,QAAM,iBA1BnDQ,UAAA,E;oCA6BIC,UAAwB,EACxB5B,mBAAA,CAMK,c,kBALHC,mBAAA,CAIKa,SAAA,QAnCXC,WAAA,CA+ByBV,MAAA,CAAAwB,cAAc,EAAtBZ,IAAI;yBAAfhB,mBAAA,CAIK;MAJ+BiB,GAAG,EAAED,IAAI,CAACE;QAC5CnB,mBAAA,CAA4B,cAAAoB,gBAAA,CAAnBH,IAAI,CAACI,IAAI,kBAClBrB,mBAAA,CAAiD,cAA3C,gBAAc,GAAAoB,gBAAA,CAAGH,IAAI,CAACa,WAAW,kBACvC9B,mBAAA,CAAoD;MAA3CuB,OAAK,EAAAnB,MAAA,IAAEC,MAAA,CAAAqB,UAAU,CAACT,IAAI,CAACE,EAAE;OAAG,QAAM,iBAlCnDY,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}