{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, inject, computed } from \"vue\";\nimport { useToast } from \"vue-toast-notification\";\nexport default {\n  name: \"TodoList\",\n  setup() {\n    const newTask = ref(\"\");\n    const tasks = ref([]);\n    const completedTasks = ref([]);\n    const ongoingTasks = ref([]);\n    const $axios = inject(\"$axios\");\n    const activeTab = ref(\"ongoing\");\n    const toast = useToast();\n    const addTask = async () => {\n      if (newTask.value.trim() !== \"\") {\n        try {\n          const response = await $axios.post(\"http://localhost:3000/tasks\", {\n            text: newTask.value,\n            createdAt: new Date().toLocaleString(),\n            completed: false,\n            completedAt: null\n          });\n          tasks.value.push(response.data);\n          ongoingTasks.value.push(response.data);\n          newTask.value = \"\";\n          toast.success(\"Task added successfully!\");\n        } catch (error) {\n          console.error(\"Error adding task:\", error);\n          toast.error(\"Failed to add task.\");\n        }\n      }\n    };\n    const deleteTask = async taskId => {\n      try {\n        await $axios.delete(`http://localhost:3000/tasks/${taskId}`);\n        tasks.value = tasks.value.filter(task => task.id !== taskId);\n        completedTasks.value = completedTasks.value.filter(task => task.id !== taskId);\n        ongoingTasks.value = ongoingTasks.value.filter(task => task.id !== taskId);\n        toast.success(\"Task deleted successfully!\");\n      } catch (error) {\n        console.error(\"Error deleting task:\", error);\n        toast.error(\"Failed to delete task.\");\n      }\n    };\n    const completeTask = async taskId => {\n      const taskIndex = tasks.value.findIndex(task => task.id === taskId);\n      if (taskIndex !== -1) {\n        try {\n          const response = await $axios.patch(`http://localhost:3000/tasks/${taskId}`, {\n            completed: true,\n            completedAt: new Date().toLocaleString()\n          });\n          const updatedTask = {\n            ...tasks.value[taskIndex],\n            completed: true,\n            completedAt: response.data.completedAt\n          };\n          ongoingTasks.value = ongoingTasks.value.filter(task => task.id !== taskId);\n          tasks.value = [...tasks.value.slice(0, taskIndex), updatedTask, ...tasks.value.slice(taskIndex + 1)];\n          completedTasks.value.push(updatedTask);\n          toast.success(\"Task completed successfully!\");\n        } catch (error) {\n          console.error(\"Error completing task:\", error);\n          toast.error(\"Failed to complete task.\");\n        }\n      }\n    };\n    onMounted(async () => {\n      try {\n        const response = await $axios.get(\"http://localhost:3000/tasks\");\n        tasks.value = response.data;\n        completedTasks.value = response.data.filter(task => task.completed);\n        ongoingTasks.value = response.data.filter(task => !task.completed);\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n        toast.error(\"Failed to fetch tasks.\");\n      }\n    });\n    const displayedTasks = computed(() => {\n      return activeTab.value === \"completed\" ? completedTasks.value : ongoingTasks.value;\n    });\n    const tabs = [\"ongoing\", \"completed\"];\n    const changeTab = tab => {\n      activeTab.value = tab;\n    };\n    const showNoTasksMessage = tab => {\n      if (tab === \"ongoing\" && ongoingTasks.value.length === 0) return true;\n      if (tab === \"completed\" && completedTasks.value.length === 0) return true;\n      return false;\n    };\n    return {\n      newTask,\n      tasks,\n      completedTasks,\n      ongoingTasks,\n      addTask,\n      completeTask,\n      deleteTask,\n      activeTab,\n      displayedTasks,\n      tabs,\n      changeTab,\n      showNoTasksMessage\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","inject","computed","useToast","name","setup","newTask","tasks","completedTasks","ongoingTasks","$axios","activeTab","toast","addTask","value","trim","response","post","text","createdAt","Date","toLocaleString","completed","completedAt","push","data","success","error","console","deleteTask","taskId","delete","filter","task","id","completeTask","taskIndex","findIndex","patch","updatedTask","slice","get","displayedTasks","tabs","changeTab","tab","showNoTasksMessage","length"],"sources":["D:\\to-do-list\\client\\vue-todo-app\\src\\components\\Todo.vue"],"sourcesContent":["<template>\r\n  <div class=\"todo-container\">\r\n    <h2 class=\"todo-heading\">To-Do List</h2>\r\n    <div class=\"todo-input\">\r\n      <input\r\n        v-model=\"newTask\"\r\n        @keyup.enter=\"addTask\"\r\n        placeholder=\"Add a new task\"\r\n      />\r\n      <button @click=\"addTask\">Add</button>\r\n    </div>\r\n    <v-app>\r\n      <v-tabs v-model=\"activeTab\" class=\"todo-tabs\">\r\n        <v-tab\r\n          v-for=\"(tab, index) in tabs\"\r\n          :key=\"index\"\r\n          @click=\"changeTab(tab)\"\r\n          :class=\"{ 'active-tab': activeTab === tab }\"\r\n        >\r\n          {{ tab }}\r\n        </v-tab>\r\n      </v-tabs>\r\n      <v-tab-item v-for=\"(tab, index) in tabs\" :key=\"index\" :value=\"tab\">\r\n        <v-card\r\n          color=\"basil\"\r\n          flat\r\n          class=\"todo-list-card\"\r\n          v-show=\"showNoTasksMessage(tab)\"\r\n        >\r\n          <v-card-text class=\"no-tasks-message\">No tasks available</v-card-text>\r\n        </v-card>\r\n        <v-card\r\n          color=\"basil\"\r\n          flat\r\n          class=\"todo-list-card\"\r\n          v-show=\"!showNoTasksMessage(tab)\"\r\n        >\r\n          <v-card-text>\r\n            <table v-if=\"activeTab === tab\" class=\"todo-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Task</th>\r\n                  <th>Created Date</th>\r\n                  <th v-if=\"activeTab === 'completed'\">Completed Date</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"task in displayedTasks\" :key=\"task.id\">\r\n                  <td>{{ task.text }}</td>\r\n                  <td>{{ task.createdAt }}</td>\r\n                  <td v-if=\"activeTab === 'completed'\">\r\n                    {{ task.completedAt }}\r\n                  </td>\r\n                  <td>\r\n                    <v-tooltip bottom>\r\n                      <template #activator=\"{ on }\">\r\n                        <v-icon\r\n                          v-if=\"activeTab !== 'completed'\"\r\n                          @click=\"completeTask(task.id)\"\r\n                          class=\"todo-icon\"\r\n                          v-bind=\"on\"\r\n                        >\r\n                          mdi-check\r\n                        </v-icon>\r\n                        <v-icon\r\n                          @click=\"deleteTask(task.id)\"\r\n                          class=\"todo-icon\"\r\n                          v-bind=\"on\"\r\n                        >\r\n                          mdi-delete\r\n                        </v-icon>\r\n                      </template>\r\n                      <span>Complete</span>\r\n                    </v-tooltip>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-tab-item>\r\n    </v-app>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, inject, computed } from \"vue\";\r\nimport { useToast } from \"vue-toast-notification\";\r\n\r\nexport default {\r\n  name: \"TodoList\",\r\n  setup() {\r\n    const newTask = ref(\"\");\r\n    const tasks = ref([]);\r\n    const completedTasks = ref([]);\r\n    const ongoingTasks = ref([]);\r\n    const $axios = inject(\"$axios\");\r\n    const activeTab = ref(\"ongoing\");\r\n    const toast = useToast();\r\n\r\n    const addTask = async () => {\r\n      if (newTask.value.trim() !== \"\") {\r\n        try {\r\n          const response = await $axios.post(\"http://localhost:3000/tasks\", {\r\n            text: newTask.value,\r\n            createdAt: new Date().toLocaleString(),\r\n            completed: false,\r\n            completedAt: null,\r\n          });\r\n          tasks.value.push(response.data);\r\n          ongoingTasks.value.push(response.data);\r\n          newTask.value = \"\";\r\n          toast.success(\"Task added successfully!\");\r\n        } catch (error) {\r\n          console.error(\"Error adding task:\", error);\r\n          toast.error(\"Failed to add task.\");\r\n        }\r\n      }\r\n    };\r\n\r\n    const deleteTask = async (taskId) => {\r\n      try {\r\n        await $axios.delete(`http://localhost:3000/tasks/${taskId}`);\r\n\r\n        tasks.value = tasks.value.filter((task) => task.id !== taskId);\r\n        completedTasks.value = completedTasks.value.filter(\r\n          (task) => task.id !== taskId\r\n        );\r\n        ongoingTasks.value = ongoingTasks.value.filter(\r\n          (task) => task.id !== taskId\r\n        );\r\n\r\n        toast.success(\"Task deleted successfully!\");\r\n      } catch (error) {\r\n        console.error(\"Error deleting task:\", error);\r\n        toast.error(\"Failed to delete task.\");\r\n      }\r\n    };\r\n\r\n    const completeTask = async (taskId) => {\r\n      const taskIndex = tasks.value.findIndex((task) => task.id === taskId);\r\n      if (taskIndex !== -1) {\r\n        try {\r\n          const response = await $axios.patch(\r\n            `http://localhost:3000/tasks/${taskId}`,\r\n            {\r\n              completed: true,\r\n              completedAt: new Date().toLocaleString(),\r\n            }\r\n          );\r\n\r\n          const updatedTask = {\r\n            ...tasks.value[taskIndex],\r\n            completed: true,\r\n            completedAt: response.data.completedAt,\r\n          };\r\n\r\n          ongoingTasks.value = ongoingTasks.value.filter(\r\n            (task) => task.id !== taskId\r\n          );\r\n\r\n          tasks.value = [\r\n            ...tasks.value.slice(0, taskIndex),\r\n            updatedTask,\r\n            ...tasks.value.slice(taskIndex + 1),\r\n          ];\r\n\r\n          completedTasks.value.push(updatedTask);\r\n\r\n          toast.success(\"Task completed successfully!\");\r\n        } catch (error) {\r\n          console.error(\"Error completing task:\", error);\r\n          toast.error(\"Failed to complete task.\");\r\n        }\r\n      }\r\n    };\r\n\r\n    onMounted(async () => {\r\n      try {\r\n        const response = await $axios.get(\"http://localhost:3000/tasks\");\r\n        tasks.value = response.data;\r\n        completedTasks.value = response.data.filter((task) => task.completed);\r\n        ongoingTasks.value = response.data.filter((task) => !task.completed);\r\n      } catch (error) {\r\n        console.error(\"Error fetching tasks:\", error);\r\n        toast.error(\"Failed to fetch tasks.\");\r\n      }\r\n    });\r\n\r\n    const displayedTasks = computed(() => {\r\n      return activeTab.value === \"completed\"\r\n        ? completedTasks.value\r\n        : ongoingTasks.value;\r\n    });\r\n\r\n    const tabs = [\"ongoing\", \"completed\"];\r\n\r\n    const changeTab = (tab) => {\r\n      activeTab.value = tab;\r\n    };\r\n\r\n    const showNoTasksMessage = (tab) => {\r\n      if (tab === \"ongoing\" && ongoingTasks.value.length === 0) return true;\r\n      if (tab === \"completed\" && completedTasks.value.length === 0) return true;\r\n      return false;\r\n    };\r\n\r\n    return {\r\n      newTask,\r\n      tasks,\r\n      completedTasks,\r\n      ongoingTasks,\r\n      addTask,\r\n      completeTask,\r\n      deleteTask,\r\n      activeTab,\r\n      displayedTasks,\r\n      tabs,\r\n      changeTab,\r\n      showNoTasksMessage,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.todo-container {\r\n  text-align: center;\r\n  margin-top: 50px;\r\n}\r\n\r\n.todo-heading {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.todo-input {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.todo-input input {\r\n  padding: 10px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.todo-input button {\r\n  padding: 10px 20px;\r\n  background-color: #007bff; /* Blue button color */\r\n  color: #fff; /* White text color for buttons */\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.todo-input button:hover {\r\n  background-color: #0056b3; /* Darker blue color on hover */\r\n}\r\n\r\n.todo-tabs {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  justify-content: center; /* Align tabs to the center */\r\n  gap: 10px; /* Add spacing between tabs */\r\n}\r\n\r\n.todo-tabs v-tab {\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease; /* Smooth transition for background color */\r\n}\r\n\r\n.todo-tabs v-tab:hover {\r\n  background-color: #f0f0f0; /* Light gray background on hover */\r\n}\r\n\r\n.todo-tabs v-tab-item {\r\n  background-color: #f2f2f2; /* Light gray background for tab content */\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  width: 70%; /* Reduce the width of tab content */\r\n  margin: 0 auto; /* Center align the tab content */\r\n  transition: background-color 0.3s ease; /* Smooth transition for background color */\r\n}\r\n\r\n.todo-tabs v-tab-item.active {\r\n  background-color: #fff; /* White background for active tab */\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Shadow effect for active tab */\r\n}\r\n\r\n.todo-list-card {\r\n  width: 100%;\r\n  margin: 0 auto;\r\n}\r\n\r\n.todo-table {\r\n  width: 90%; /* Reduce the width of the table */\r\n  margin: 0 auto; /* Center align the table */\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n}\r\n\r\n.todo-table th,\r\n.todo-table td {\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n  text-align: center; /* Align table content at the center */\r\n}\r\n\r\n.todo-table th {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n.todo-table td button {\r\n  margin-right: 5px;\r\n  background-color: #dc3545; /* Red button color */\r\n  color: #fff; /* White text color for buttons */\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease; /* Smooth transition for background color */\r\n}\r\n\r\n.todo-table td button:hover {\r\n  background-color: #bd2130; /* Darker red color on hover */\r\n}\r\n\r\n.todo-table td button.completed {\r\n  background-color: #28a745; /* Green button color for completed tasks */\r\n}\r\n\r\n.todo-table td button.completed:hover {\r\n  background-color: #218838; /* Darker green color on hover */\r\n}\r\n\r\n/* Add specific styles for the 'completed' tab */\r\n.todo-tabs v-tab-item[value=\"completed\"] {\r\n  background-color: #3498db; /* Blue background for completed tab content */\r\n  color: #fff; /* White text for completed tab content */\r\n}\r\n\r\n.active-tab {\r\n  background-color: #007bff; /* Blue background for active tab */\r\n  color: #fff; /* White text color for active tab */\r\n}\r\n\r\n.no-tasks-message {\r\n  font-style: italic;\r\n  color: #888;\r\n}\r\n\r\n.todo-icon {\r\n  cursor: pointer;\r\n  font-size: 20px;\r\n  margin-right: 5px;\r\n  color: #fff;\r\n}\r\n\r\n.toast-message {\r\n  background-color: #28a745; /* Green background for toast messages */\r\n  color: #fff; /* White text color for toast messages */\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}