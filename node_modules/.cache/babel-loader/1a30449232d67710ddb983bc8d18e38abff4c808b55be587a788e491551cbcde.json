{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, vShow as _vShow, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ee48fd14\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"todo-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"todo-heading\"\n}, \"To-Do List\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"todo-input\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"todo-table\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Task\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Created Date\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Actions\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  key: 0\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_tab = _resolveComponent(\"v-tab\");\n  const _component_v_tabs = _resolveComponent(\"v-tabs\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_tab_item = _resolveComponent(\"v-tab-item\");\n  const _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newTask = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $setup.addTask && $setup.addTask(...args), [\"enter\"])),\n    placeholder: \"Add a new task\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.newTask]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.addTask && $setup.addTask(...args))\n  }, \"Add\")]), _createVNode(_component_v_app, null, {\n    default: _withCtx(() => [_createVNode(_component_v_tabs, {\n      modelValue: $setup.activeTab,\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.activeTab = $event),\n      class: \"todo-tabs\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tabs, (tab, index) => {\n        return _openBlock(), _createBlock(_component_v_tab, {\n          key: index,\n          onClick: $event => $setup.changeTab(tab),\n          class: _normalizeClass({\n            'active-tab': $setup.activeTab === tab\n          })\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(tab), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"class\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tabs, (tab, index) => {\n      return _openBlock(), _createBlock(_component_v_tab_item, {\n        key: index,\n        value: tab\n      }, {\n        default: _withCtx(() => [_withDirectives(_createVNode(_component_v_card, {\n          color: \"basil\",\n          flat: \"\",\n          class: \"todo-list-card\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [_createTextVNode(\"No tasks available\")]),\n            _: 1 /* STABLE */\n          })]),\n          _: 2 /* DYNAMIC */\n        }, 1536 /* NEED_PATCH, DYNAMIC_SLOTS */), [[_vShow, $setup.showNoTasksMessage(tab)]]), _withDirectives(_createVNode(_component_v_card, {\n          color: \"basil\",\n          flat: \"\",\n          class: \"todo-list-card\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [$setup.activeTab === tab ? (_openBlock(), _createElementBlock(\"table\", _hoisted_4, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_hoisted_5, _hoisted_6, $setup.activeTab === 'completed' ? (_openBlock(), _createElementBlock(\"th\", _hoisted_7, \"Completed Date\")) : _createCommentVNode(\"v-if\", true), _hoisted_8])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.displayedTasks, task => {\n              return _openBlock(), _createElementBlock(\"tr\", {\n                key: task.id\n              }, [_createElementVNode(\"td\", null, _toDisplayString(task.text), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(task.createdAt), 1 /* TEXT */), $setup.activeTab === 'completed' ? (_openBlock(), _createElementBlock(\"td\", _hoisted_9, _toDisplayString(task.completedAt), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"td\", null, [$setup.activeTab !== 'completed' ? (_openBlock(), _createElementBlock(\"button\", {\n                key: 0,\n                onClick: $event => $setup.completeTask(task.id),\n                class: \"todo-button\"\n              }, \" Complete \", 8 /* PROPS */, _hoisted_10)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n                onClick: $event => $setup.deleteTask(task.id),\n                class: \"todo-button\"\n              }, \" Delete \", 8 /* PROPS */, _hoisted_11)])]);\n            }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]),\n          _: 2 /* DYNAMIC */\n        }, 1536 /* NEED_PATCH, DYNAMIC_SLOTS */), [[_vShow, !$setup.showNoTasksMessage(tab)]])]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_cache","$event","$setup","newTask","onKeyup","_withKeys","args","addTask","placeholder","onClick","_createVNode","_component_v_app","default","_withCtx","_component_v_tabs","modelValue","activeTab","_Fragment","_renderList","tabs","tab","index","_createBlock","_component_v_tab","changeTab","_normalizeClass","_createTextVNode","_toDisplayString","_","_component_v_tab_item","value","_component_v_card","color","flat","_component_v_card_text","showNoTasksMessage","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_createCommentVNode","_hoisted_8","displayedTasks","task","id","text","createdAt","_hoisted_9","completedAt","completeTask","_hoisted_10","deleteTask","_hoisted_11"],"sources":["D:\\to-do-list\\client\\vue-todo-app\\src\\components\\Todo.vue"],"sourcesContent":["<template>\r\n  <div class=\"todo-container\">\r\n    <h2 class=\"todo-heading\">To-Do List</h2>\r\n    <div class=\"todo-input\">\r\n      <input\r\n        v-model=\"newTask\"\r\n        @keyup.enter=\"addTask\"\r\n        placeholder=\"Add a new task\"\r\n      />\r\n      <button @click=\"addTask\">Add</button>\r\n    </div>\r\n    <v-app>\r\n      <v-tabs v-model=\"activeTab\" class=\"todo-tabs\">\r\n        <v-tab\r\n          v-for=\"(tab, index) in tabs\"\r\n          :key=\"index\"\r\n          @click=\"changeTab(tab)\"\r\n          :class=\"{ 'active-tab': activeTab === tab }\"\r\n        >\r\n          {{ tab }}\r\n        </v-tab>\r\n      </v-tabs>\r\n      <v-tab-item v-for=\"(tab, index) in tabs\" :key=\"index\" :value=\"tab\">\r\n        <v-card\r\n          color=\"basil\"\r\n          flat\r\n          class=\"todo-list-card\"\r\n          v-show=\"showNoTasksMessage(tab)\"\r\n        >\r\n          <v-card-text>No tasks available</v-card-text>\r\n        </v-card>\r\n        <v-card\r\n          color=\"basil\"\r\n          flat\r\n          class=\"todo-list-card\"\r\n          v-show=\"!showNoTasksMessage(tab)\"\r\n        >\r\n          <v-card-text>\r\n            <table v-if=\"activeTab === tab\" class=\"todo-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Task</th>\r\n                  <th>Created Date</th>\r\n                  <th v-if=\"activeTab === 'completed'\">Completed Date</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"task in displayedTasks\" :key=\"task.id\">\r\n                  <td>{{ task.text }}</td>\r\n                  <td>{{ task.createdAt }}</td>\r\n                  <td v-if=\"activeTab === 'completed'\">\r\n                    {{ task.completedAt }}\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      v-if=\"activeTab !== 'completed'\"\r\n                      @click=\"completeTask(task.id)\"\r\n                      class=\"todo-button\"\r\n                    >\r\n                      Complete\r\n                    </button>\r\n                    <button @click=\"deleteTask(task.id)\" class=\"todo-button\">\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-tab-item>\r\n    </v-app>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, inject, computed } from \"vue\";\r\n\r\nexport default {\r\n  name: \"TodoList\",\r\n  setup() {\r\n    const newTask = ref(\"\");\r\n    const tasks = ref([]);\r\n    const completedTasks = ref([]);\r\n    const ongoingTasks = ref([]);\r\n    const $axios = inject(\"$axios\");\r\n    const activeTab = ref(\"ongoing\");\r\n\r\n    const addTask = async () => {\r\n      if (newTask.value.trim() !== \"\") {\r\n        const response = await $axios.post(\"http://localhost:3000/tasks\", {\r\n          text: newTask.value,\r\n          createdAt: new Date().toLocaleString(),\r\n          completed: false,\r\n          completedAt: null,\r\n        });\r\n        tasks.value.push(response.data);\r\n        ongoingTasks.value.push(response.data);\r\n        newTask.value = \"\";\r\n      }\r\n    };\r\n\r\n    const deleteTask = async (taskId) => {\r\n      try {\r\n        await $axios.delete(`http://localhost:3000/tasks/${taskId}`);\r\n\r\n        tasks.value = tasks.value.filter((task) => task.id !== taskId);\r\n        completedTasks.value = completedTasks.value.filter(\r\n          (task) => task.id !== taskId\r\n        );\r\n        ongoingTasks.value = ongoingTasks.value.filter(\r\n          (task) => task.id !== taskId\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Error deleting task:\", error);\r\n      }\r\n    };\r\n\r\n    const completeTask = async (taskId) => {\r\n      const taskIndex = tasks.value.findIndex((task) => task.id === taskId);\r\n      if (taskIndex !== -1) {\r\n        const response = await $axios.patch(\r\n          `http://localhost:3000/tasks/${taskId}`,\r\n          {\r\n            completed: true,\r\n            completedAt: new Date().toLocaleString(),\r\n          }\r\n        );\r\n\r\n        const updatedTask = {\r\n          ...tasks.value[taskIndex],\r\n          completed: true,\r\n          completedAt: response.data.completedAt,\r\n        };\r\n\r\n        ongoingTasks.value = ongoingTasks.value.filter(\r\n          (task) => task.id !== taskId\r\n        );\r\n\r\n        tasks.value = [\r\n          ...tasks.value.slice(0, taskIndex),\r\n          updatedTask,\r\n          ...tasks.value.slice(taskIndex + 1),\r\n        ];\r\n\r\n        completedTasks.value.push(updatedTask);\r\n      }\r\n    };\r\n\r\n    onMounted(async () => {\r\n      const response = await $axios.get(\"http://localhost:3000/tasks\");\r\n      tasks.value = response.data;\r\n      completedTasks.value = response.data.filter((task) => task.completed);\r\n      ongoingTasks.value = response.data.filter((task) => !task.completed);\r\n    });\r\n\r\n    const displayedTasks = computed(() => {\r\n      return activeTab.value === \"completed\"\r\n        ? completedTasks.value\r\n        : ongoingTasks.value;\r\n    });\r\n\r\n    const tabs = [\"ongoing\", \"completed\"];\r\n\r\n    const changeTab = (tab) => {\r\n      activeTab.value = tab;\r\n    };\r\n\r\n    const showNoTasksMessage = (tab) => {\r\n      if (tab === \"ongoing\" && ongoingTasks.value.length === 0) return true;\r\n      if (tab === \"completed\" && completedTasks.value.length === 0) return true;\r\n      return false;\r\n    };\r\n\r\n    return {\r\n      newTask,\r\n      tasks,\r\n      completedTasks,\r\n      ongoingTasks,\r\n      addTask,\r\n      completeTask,\r\n      deleteTask,\r\n      activeTab,\r\n      displayedTasks,\r\n      tabs,\r\n      changeTab,\r\n      showNoTasksMessage,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.todo-container {\r\n  text-align: center;\r\n  margin-top: 50px;\r\n}\r\n\r\n.todo-heading {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.todo-input {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.todo-input input {\r\n  padding: 10px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.todo-input button {\r\n  padding: 10px 20px;\r\n  background-color: #007bff; /* Blue button color */\r\n  color: #fff; /* White text color for buttons */\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.todo-input button:hover {\r\n  background-color: #0056b3; /* Darker blue color on hover */\r\n}\r\n\r\n.todo-tabs {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  justify-content: center; /* Align tabs to the center */\r\n  gap: 10px; /* Add spacing between tabs */\r\n}\r\n\r\n.todo-tabs v-tab {\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease; /* Smooth transition for background color */\r\n}\r\n\r\n.todo-tabs v-tab:hover {\r\n  background-color: #f0f0f0; /* Light gray background on hover */\r\n}\r\n\r\n.todo-tabs v-tab-item {\r\n  background-color: #f2f2f2; /* Light gray background for tab content */\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  width: 70%; /* Reduce the width of tab content */\r\n  margin: 0 auto; /* Center align the tab content */\r\n  transition: background-color 0.3s ease; /* Smooth transition for background color */\r\n}\r\n\r\n.todo-tabs v-tab-item.active {\r\n  background-color: #fff; /* White background for active tab */\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Shadow effect for active tab */\r\n}\r\n\r\n.todo-list-card {\r\n  width: 100%;\r\n  margin: 0 auto;\r\n}\r\n\r\n.todo-table {\r\n  width: 90%; /* Reduce the width of the table */\r\n  margin: 0 auto; /* Center align the table */\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n}\r\n\r\n.todo-table th,\r\n.todo-table td {\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n  text-align: center; /* Align table content at the center */\r\n}\r\n\r\n.todo-table th {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n.todo-table td button {\r\n  margin-right: 5px;\r\n  background-color: #dc3545; /* Red button color */\r\n  color: #fff; /* White text color for buttons */\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease; /* Smooth transition for background color */\r\n}\r\n\r\n.todo-table td button:hover {\r\n  background-color: #bd2130; /* Darker red color on hover */\r\n}\r\n\r\n.todo-table td button.completed {\r\n  background-color: #28a745; /* Green button color for completed tasks */\r\n}\r\n\r\n.todo-table td button.completed:hover {\r\n  background-color: #218838; /* Darker green color on hover */\r\n}\r\n\r\n/* Add specific styles for the 'completed' tab */\r\n.todo-tabs v-tab-item[value=\"completed\"] {\r\n  background-color: #3498db; \r\n  color: #fff; /* White text for completed tab content */\r\n}\r\n\r\n.active-tab {\r\n  background-color: #007bff; \r\n  color: #fff; /* White text color for active tab */\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}