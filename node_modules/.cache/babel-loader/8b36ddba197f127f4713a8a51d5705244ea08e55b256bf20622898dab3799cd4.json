{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      newTask: \"TodoList list\",\n      tasks: []\n    };\n  },\n  computed: {\n    completedTasks() {\n      return this.tasks.filter(task => task.completed);\n    }\n  },\n  methods: {\n    async addTask() {\n      if (this.newTask.trim() !== \"\") {\n        const response = await this.$axios.post(\"http://localhost:3000/tasks\", {\n          text: this.newTask,\n          createdAt: new Date().toLocaleString(),\n          completed: false,\n          completedAt: null\n        });\n        this.tasks.push(response.data);\n        this.newTask = \"\";\n      }\n    },\n    async completeTask(taskId) {\n      const taskIndex = this.tasks.findIndex(task => task.id === taskId);\n      if (taskIndex !== -1) {\n        const response = await this.$axios.patch(`http://localhost:3000/tasks/${taskId}`, {\n          completed: true,\n          completedAt: new Date().toLocaleString()\n        });\n        this.$set(this.tasks, taskIndex, response.data);\n      }\n    }\n  },\n  async created() {\n    const response = await this.$axios.get(\"http://localhost:3000/tasks\");\n    this.tasks = response.data;\n  }\n};","map":{"version":3,"names":["data","newTask","tasks","computed","completedTasks","filter","task","completed","methods","addTask","trim","response","$axios","post","text","createdAt","Date","toLocaleString","completedAt","push","completeTask","taskId","taskIndex","findIndex","id","patch","$set","created","get"],"sources":["D:\\to-do-list\\client\\vue-todo-app\\src\\components\\Todo.vue"],"sourcesContent":["<!-- src/components/Todo.vue -->\r\n\r\n<template>\r\n  <div>\r\n    <h2>To-Do List</h2>\r\n    <div>\r\n      <input\r\n        v-model=\"newTask\"\r\n        @keyup.enter=\"addTask\"\r\n        placeholder=\"Add a new task\"\r\n      />\r\n    </div>\r\n    <ul>\r\n      <li v-for=\"task in tasks\" :key=\"task.id\">\r\n        <span>{{ task.text }}</span>\r\n        <span>Created on: {{ task.createdAt }}</span>\r\n        <button @click=\"completeTask(task.id)\">Complete</button>\r\n      </li>\r\n    </ul>\r\n    <h3>Completed Tasks</h3>\r\n    <ul>\r\n      <li v-for=\"task in completedTasks\" :key=\"task.id\">\r\n        <span>{{ task.text }}</span>\r\n        <span>Completed on: {{ task.completedAt }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      newTask: \"TodoList list\",\r\n      tasks: [],\r\n    };\r\n  },\r\n  computed: {\r\n    completedTasks() {\r\n      return this.tasks.filter((task) => task.completed);\r\n    },\r\n  },\r\n  methods: {\r\n    async addTask() {\r\n      if (this.newTask.trim() !== \"\") {\r\n        const response = await this.$axios.post(\"http://localhost:3000/tasks\", {\r\n          text: this.newTask,\r\n          createdAt: new Date().toLocaleString(),\r\n          completed: false,\r\n          completedAt: null,\r\n        });\r\n        this.tasks.push(response.data);\r\n        this.newTask = \"\";\r\n      }\r\n    },\r\n    async completeTask(taskId) {\r\n      const taskIndex = this.tasks.findIndex((task) => task.id === taskId);\r\n      if (taskIndex !== -1) {\r\n        const response = await this.$axios.patch(\r\n          `http://localhost:3000/tasks/${taskId}`,\r\n          {\r\n            completed: true,\r\n            completedAt: new Date().toLocaleString(),\r\n          }\r\n        );\r\n        this.$set(this.tasks, taskIndex, response.data);\r\n      }\r\n    },\r\n  },\r\n  async created() {\r\n    const response = await this.$axios.get(\"http://localhost:3000/tasks\");\r\n    this.tasks = response.data;\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AA8BA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,eAAe;MACxBC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACF,KAAK,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,SAAS,CAAC;IACpD;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,OAAOA,CAAA,EAAG;MACd,IAAI,IAAI,CAACR,OAAO,CAACS,IAAI,CAAC,MAAM,EAAE,EAAE;QAC9B,MAAMC,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,6BAA6B,EAAE;UACrEC,IAAI,EAAE,IAAI,CAACb,OAAO;UAClBc,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC;UACtCV,SAAS,EAAE,KAAK;UAChBW,WAAW,EAAE;QACf,CAAC,CAAC;QACF,IAAI,CAAChB,KAAK,CAACiB,IAAI,CAACR,QAAQ,CAACX,IAAI,CAAC;QAC9B,IAAI,CAACC,OAAM,GAAI,EAAE;MACnB;IACF,CAAC;IACD,MAAMmB,YAAYA,CAACC,MAAM,EAAE;MACzB,MAAMC,SAAQ,GAAI,IAAI,CAACpB,KAAK,CAACqB,SAAS,CAAEjB,IAAI,IAAKA,IAAI,CAACkB,EAAC,KAAMH,MAAM,CAAC;MACpE,IAAIC,SAAQ,KAAM,CAAC,CAAC,EAAE;QACpB,MAAMX,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACa,KAAK,CACrC,+BAA8BJ,MAAO,EAAC,EACvC;UACEd,SAAS,EAAE,IAAI;UACfW,WAAW,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC;QACzC,CACF,CAAC;QACD,IAAI,CAACS,IAAI,CAAC,IAAI,CAACxB,KAAK,EAAEoB,SAAS,EAAEX,QAAQ,CAACX,IAAI,CAAC;MACjD;IACF;EACF,CAAC;EACD,MAAM2B,OAAOA,CAAA,EAAG;IACd,MAAMhB,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACgB,GAAG,CAAC,6BAA6B,CAAC;IACrE,IAAI,CAAC1B,KAAI,GAAIS,QAAQ,CAACX,IAAI;EAC5B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}